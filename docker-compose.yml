version: '3.8'

services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    env_file:
      - .env
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "50m"
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "50m"
    networks:
      - nesjs-network
    environment:
      MYSQL_DATABASE: testDb
      MYSQL_USER: user
      MYSQL_PASSWORD: Password123
      MYSQL_ROOT_PASSWORD: Password123
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - nesjs-network
    ports:
      - "6379:6379"
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "50m"

networks:
  nesjs-network:
